generator client {
  provider = "prisma-client-js"
  
}

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_PRISMA_URL") // uses connection pooling
    
}

model UserTest {
  id        Int      @id @default(autoincrement())
  name      String
  email     String @unique
  password  String
  ci String @unique
  Medic Medic?
  Patient Patient?
  Admin Admin?
}

model Medic {
  medic_id        Int      @id
  user    UserTest @relation(fields: [medic_id], references: [id])
  speciality String
  Appointments Appointment[]
}

model Admin {
  admin_id        Int      @id
  user    UserTest @relation(fields: [admin_id], references: [id])
}

model Patient {
  patient_id        Int      @id
  user    UserTest @relation(fields: [patient_id], references: [id])
  Appointments Appointment[]
}


model Appointment {
  id        Int      @id @default(autoincrement())
  start_date DateTime
  end_date DateTime
  medic_id  Int
  patient_id   Int
  medic     Medic    @relation(fields: [medic_id], references: [medic_id])
  patient      Patient @relation(fields: [patient_id], references: [patient_id])
  description String
}

model Forms {
  id        Int      @id @default(autoincrement())
  title     String
  questions Json
  answers   Answers[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

}

model Answers {
  id        Int      @id @default(autoincrement())
  questions Json
  id_form   Int
  form      Forms    @relation(fields:[id_form], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}